{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./SitesAdmin.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","$","jQuery","Craft","SitesAdmin","Garnish","Base","extend","$groups","$selectedGroup","init","this","find","addListener","$groupSettingsBtn","length","data","settings","onOptionSelect","proxy","elem","$elem","hasClass","renameSelectedGroup","deleteSelectedGroup","addNewGroup","promptForGroupName","postActionRequest","response","textStatus","success","location","href","getUrl","groupId","group","id","errors","flattenErrors","alert","join","cp","displayError","oldName","text","newName","displayNotice","prompt","confirm","responseErrors","attribute","concat","SiteAdminTable","AdminTable","confirmDeleteModal","$rowToDelete","$deleteActionRadios","$deleteSubmitBtn","$deleteSpinner","_deleting","confirmDeleteItem","$row","destroy","_createConfirmDeleteModal","isMobileBrowser","setTimeout","first","trigger","validateDeleteInputs","validates","eq","prop","removeClass","addClass","submitDeleteLocale","ev","preventDefault","disable","getItemId","transferContentTo","$transferSelect","val","deleteAction","enable","hide","handleDeleteItemResponse","getItemName","$form","getCsrfInput","appendTo","$bod","$body","language","$buttons","$cancelBtn","type","class","site","sites","append","escapeHtml","Modal"],"mappings":"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","file":"SitesAdmin.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    Craft.SitesAdmin = Garnish.Base.extend({\n        $groups: null,\n        $selectedGroup: null,\n\n        init: function() {\n            this.$groups = $('#groups');\n            this.$selectedGroup = this.$groups.find('a.sel:first');\n            this.addListener($('#newgroupbtn'), 'activate', 'addNewGroup');\n\n            var $groupSettingsBtn = $('#groupsettingsbtn');\n\n            if ($groupSettingsBtn.length) {\n                var menuBtn = $groupSettingsBtn.data('menubtn');\n\n                menuBtn.settings.onOptionSelect = $.proxy(function(elem) {\n                    var $elem = $(elem);\n\n                    if ($elem.hasClass('disabled')) {\n                        return;\n                    }\n\n                    switch ($elem.data('action')) {\n                        case 'rename': {\n                            this.renameSelectedGroup();\n                            break;\n                        }\n                        case 'delete': {\n                            this.deleteSelectedGroup();\n                            break;\n                        }\n                    }\n                }, this);\n            }\n        },\n\n        addNewGroup: function() {\n            var name = this.promptForGroupName('');\n\n            if (name) {\n                var data = {\n                    name: name\n                };\n\n                Craft.postActionRequest('sites/save-group', data, $.proxy(function(response, textStatus) {\n                    if (textStatus === 'success') {\n                        if (response.success) {\n                            location.href = Craft.getUrl('settings/sites', {groupId: response.group.id});\n                        } else if (response.errors) {\n                            var errors = this.flattenErrors(response.errors);\n                            alert(Craft.t('app', 'Could not create the group:') + \"\\n\\n\" + errors.join(\"\\n\"));\n                        } else {\n                            Craft.cp.displayError();\n                        }\n                    }\n                }, this));\n            }\n        },\n\n        renameSelectedGroup: function() {\n            var oldName = this.$selectedGroup.text(),\n                newName = this.promptForGroupName(oldName);\n\n            if (newName && newName !== oldName) {\n                var data = {\n                    id: this.$selectedGroup.data('id'),\n                    name: newName\n                };\n\n                Craft.postActionRequest('sites/save-group', data, $.proxy(function(response, textStatus) {\n                    if (textStatus === 'success') {\n                        if (response.success) {\n                            this.$selectedGroup.text(response.group.name);\n                            Craft.cp.displayNotice(Craft.t('app', 'Group renamed.'));\n                        } else if (response.errors) {\n                            var errors = this.flattenErrors(response.errors);\n                            alert(Craft.t('app', 'Could not rename the group:') + \"\\n\\n\" + errors.join(\"\\n\"));\n                        } else {\n                            Craft.cp.displayError();\n                        }\n                    }\n                }, this));\n            }\n        },\n\n        promptForGroupName: function(oldName) {\n            return prompt(Craft.t('app', 'What do you want to name the group?'), oldName);\n        },\n\n        deleteSelectedGroup: function() {\n            if (confirm(Craft.t('app', 'Are you sure you want to delete this group?'))) {\n                var data = {\n                    id: this.$selectedGroup.data('id')\n                };\n\n                Craft.postActionRequest('sites/delete-group', data, $.proxy(function(response, textStatus) {\n                    if (textStatus === 'success') {\n                        if (response.success) {\n                            location.href = Craft.getUrl('settings/sites');\n                        } else {\n                            Craft.cp.displayError();\n                        }\n                    }\n                }, this));\n            }\n        },\n\n        flattenErrors: function(responseErrors) {\n            var errors = [];\n\n            for (var attribute in responseErrors) {\n                if (!responseErrors.hasOwnProperty(attribute)) {\n                    continue;\n                }\n\n                errors = errors.concat(responseErrors[attribute]);\n            }\n\n            return errors;\n        }\n    });\n\n    Craft.SiteAdminTable = Craft.AdminTable.extend({\n        confirmDeleteModal: null,\n\n        $rowToDelete: null,\n        $deleteActionRadios: null,\n        $deleteSubmitBtn: null,\n        $deleteSpinner: null,\n\n        _deleting: false,\n\n        confirmDeleteItem: function($row) {\n            if (this.confirmDeleteModal) {\n                this.confirmDeleteModal.destroy();\n                delete this.confirmDeleteModal;\n            }\n\n            this._createConfirmDeleteModal($row);\n\n            // Auto-focus the first radio\n            if (!Garnish.isMobileBrowser(true)) {\n                setTimeout($.proxy(function() {\n                    this.$deleteActionRadios.first().trigger('focus');\n                }, this), 100);\n            }\n\n            return false;\n        },\n\n        validateDeleteInputs: function() {\n            var validates = (\n                this.$deleteActionRadios.eq(0).prop('checked') ||\n                this.$deleteActionRadios.eq(1).prop('checked')\n            );\n\n            if (validates) {\n                this.$deleteSubmitBtn.removeClass('disabled');\n            } else {\n                this.$deleteSubmitBtn.addClass('disabled');\n            }\n\n            return validates;\n        },\n\n        submitDeleteLocale: function(ev) {\n            ev.preventDefault();\n\n            if (this._deleting || !this.validateDeleteInputs()) {\n                return;\n            }\n\n            this.$deleteSubmitBtn.addClass('active');\n            this.$deleteSpinner.removeClass('hidden');\n            this.disable();\n            this._deleting = true;\n\n            var data = {\n                id: this.getItemId(this.$rowToDelete)\n            };\n\n            // Are we transferring content?\n            if (this.$deleteActionRadios.eq(0).prop('checked')) {\n                data.transferContentTo = this.$transferSelect.val();\n            }\n\n            Craft.postActionRequest(this.settings.deleteAction, data, $.proxy(function(response, textStatus) {\n                if (textStatus === 'success') {\n                    this._deleting = false;\n                    this.enable();\n                    this.confirmDeleteModal.hide();\n                    this.handleDeleteItemResponse(response, this.$rowToDelete);\n                }\n            }, this));\n        },\n\n        _createConfirmDeleteModal: function($row) {\n            this.$rowToDelete = $row;\n\n            let id = this.getItemId($row);\n            let name = this.getItemName($row);\n\n            let $form = $(\n                '<form id=\"confirmdeletemodal\" class=\"modal fitted\" method=\"post\" accept-charset=\"UTF-8\">' +\n                Craft.getCsrfInput() +\n                '<input type=\"hidden\" name=\"action\" value=\"localization/deleteLocale\"/>' +\n                '<input type=\"hidden\" name=\"id\" value=\"' + id + '\"/>' +\n                '</form>'\n            ).appendTo(Garnish.$bod);\n            let $body = $(\n                '<div class=\"body\">' +\n                '<p>' + Craft.t('app', 'What do you want to do with any content that is only available in {language}?', {language: name}) + '</p>' +\n                '<div class=\"options\">' +\n                '<label><input type=\"radio\" name=\"contentAction\" value=\"transfer\"/> ' + Craft.t('app', 'Transfer it to:') + '</label> ' +\n                '<div id=\"transferselect\" class=\"select\">' +\n                '<select/>' +\n                '</div>' +\n                '</div>' +\n                '<div>' +\n                '<label><input type=\"radio\" name=\"contentAction\" value=\"delete\"/> ' + Craft.t('app', 'Delete it') + '</label>' +\n                '</div>' +\n                '</div>'\n            ).appendTo($form);\n            let $buttons = $('<div class=\"buttons right\"/>').appendTo($body);\n            let $cancelBtn = $('<button/>', {\n                type: 'button',\n                class: 'btn',\n                text: Craft.t('app', 'Cancel'),\n            }).appendTo($buttons);\n\n            this.$deleteActionRadios = $body.find('input[type=radio]');\n            this.$transferSelect = $('#transferselect').find('> select');\n            this.$deleteSubmitBtn = $('<button/>', {\n                type: 'submit',\n                class: 'btn submit disabled',\n                text: Craft.t('app', 'Delete {site}', {site: name}),\n            }).appendTo($buttons);\n            this.$deleteSpinner = $('<div class=\"spinner hidden\"/>').appendTo($buttons);\n\n            for (var i = 0; i < Craft.sites.length; i++) {\n                if (Craft.sites[i].id != id) {\n                    this.$transferSelect.append('<option value=\"' + Craft.sites[i].id + '\">' + Craft.escapeHtml(Craft.sites[i].name) + '</option>');\n                }\n            }\n\n            this.confirmDeleteModal = new Garnish.Modal($form);\n\n            this.addListener($cancelBtn, 'click', function() {\n                this.confirmDeleteModal.hide();\n            });\n\n            this.addListener(this.$deleteActionRadios, 'change', 'validateDeleteInputs');\n            this.addListener($form, 'submit', 'submitDeleteLocale');\n        }\n    });\n})(jQuery);\n"],"sourceRoot":""}